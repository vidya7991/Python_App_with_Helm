name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Amazon ECR
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout your repo code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::914964735219:role/open
          aws-region: us-east-1

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build, Tag, and Push Docker Image to ECR
      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flask-helloworld        # your repo name in ECR
          IMAGE_TAG: latest
        run: |
          echo "Building Docker image..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 5 (optional): Print image URI for confirmation
      - name: Print Image URI
        run: echo "âœ… Image pushed:${{ steps.login-ecr.outputs.registry }}/flask-helloworld:latest"

      # Step 6: Configure kubectl for EKS access
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --region us-east-1 \
            --name demo-cluster-1

      - name: Verify cluster access
        run: kubectl get nodes

      # Step 7: Deploy with Helm
      - name: Deploy using Helm
        run: |
          echo "Deploying with Helm..."

          helm upgrade --install foo-py ./foo-py \
            -f ./foo-py/values.yaml \
            -n py-demo \
            --create-namespace

